<?xml version="1.0" encoding="UTF-8"?>
<!-- Basic support for ECAS authentication -->
<!-- To enable this, uncomment the line for config-security-ecas.xml in config-security.xml -->
<!-- Then, configure your URLs on ecas-config.properties: cas.baseURL=https://webgate.ec.europa.eu/cas -->
<!-- Make sure web.xml is correctly configured using the Tomcat login realm -->
<!-- Finally, on config-security-core.xml, replace the authenticator with
	the ECAS one: <property name="providers"> <list> <ref bean="casAuthenticationProvider"
	/> </list> -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/util
          http://www.springframework.org/schema/util/spring-util.xsd">
  <!-- This filter handles a Single Logout Request from the CAS Server -->
  <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />

  <!-- This filter redirects to the CAS Server to signal Single Logout should
    be performed -->
  <bean id="requestSingleLogoutFilter"
        class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg ref="logoutSuccessHandler" />
    <constructor-arg>
      <array>
        <bean class="jeeves.config.springutil.LogoutUserSessionHandler" />
        <bean
          class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
      </array>
    </constructor-arg>
    <property name="filterProcessesUrl" value="/j_spring_security_logout" />
  </bean>

  <bean id="logoutSuccessHandler"
        class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
    <property name="defaultTargetUrl" value="${cas.logout.url}"></property>
  </bean>

  <!-- J2EE pre-authentication -->
  <bean id="ecasPreAuthenticationFilter"
        class="org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter">
    <property name="authenticationManager" ref="authenticationManager" />
    <!-- Following recommendations of https://webgate.ec.europa.eu/CITnet/confluence/display/RefApp/ECAS+and+Spring+security -->
    <property name="continueFilterChainOnUnsuccessfulAuthentication"
              value="false" />
  </bean>

  <bean id="casAuthenticationProvider"
        class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
    <property name="preAuthenticatedUserDetailsService">
      <bean id="userDetailsServiceWrapper"
            class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        <property name="userDetailsService" ref="userDetailsService" />
      </bean>
    </property>
  </bean>

  <bean id="userDetailsService" class="org.fao.geonet.kernel.security.ecas.ECasUserDetailsBuilderService">
  </bean>

  <bean id="filterChainFilters" class="java.util.ArrayList">
    <constructor-arg
      ref="ecasFilterChanFilters">
    </constructor-arg>
  </bean>

  <util:list id="ecasFilterChanFilters">
    <ref bean="securityContextPersistenceFilter"/>
    <!-- To disable csrf security (not recommended) comment the following line -->
    <ref bean="csrfFilter" />
    <!-- To disable csrf security (not recommended) comment the upper line -->
    <ref bean="logoutFilter"/>
    <!-- A filter that check if an external service already authenticated user
                 (default implementation does nothing but can be overridden) -->
    <ref bean="ecasPreAuthenticationFilter" />
    <!--<ref bean="preAuthenticationFilter"/>
    <ref bean="basicAuthenticationFilter"/>
    <ref bean="formLoginFilter"/>-->
    <ref bean="requestCacheFilter"/>
    <ref bean="anonymousFilter"/>
    <ref bean="sessionMgmtFilter"/>
    <ref bean="exceptionTranslationFilter"/>
    <ref bean="filterSecurityInterceptor"/>
  </util:list>


  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider ref="casAuthenticationProvider" />
  </security:authentication-manager>

  <bean id="ecasConfiguration"
        class="org.fao.geonet.kernel.security.ecas.EcasConfiguration">
    <property name="updateProfile" value="false"/>
    <property name="updateGroup" value="false"/>
  </bean>
</beans>
